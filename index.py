import telebot
import COVID19Py
import json
import sys
import time

sys.path.insert(0, ".")
import lib
import covid19

with open("countries.json", "r", encoding="utf-8") as datafile:
    data = json.loads(datafile.read())

with open("./botdata/token.txt") as token:
    bot = telebot.TeleBot(token.read())

def getPrettyNumber(number):
    return str((f"{number:,}").replace(",", " "))

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /statistic')

@bot.message_handler(commands=["statistic"])
def send_statistic(message):
    world = covid19.getWorld()
    bot.send_message(message.chat.id, "üåé *–í–µ—Å—å –º–∏—Ä*\n\n" + 
        "üìä *" + lib.getPrettyNumber(world["cases"]) + "* —Å–ª—É—á–∞–µ–≤\n" +
        "ü©π *" + lib.getPrettyNumber(world["tests"]) + "* —Ç–µ—Å—Ç–æ–≤\n\n" +
        "ü§í *" + lib.getPrettyNumber(world["active"]) + "* `+" + lib.getPrettyNumber(world["todayCases"]) + "` –±–æ–ª–µ–µ—Ç\n" +
        "üíä *" + lib.getPrettyNumber(world["recovered"]) + "* `+" + "0" + "` –∑–¥–æ—Ä–æ–≤—ã—Ö\n" +
        "üíÄ *" + lib.getPrettyNumber(world["deaths"]) + "* `+" + lib.getPrettyNumber(world["todayDeaths"]) + "` —Å–º–µ—Ä—Ç–µ–π",
        parse_mode = "Markdown")

def loadMenu (info, message, text):
    keyboard = telebot.types.InlineKeyboardMarkup()
    for item in info:
        keyboard.add(telebot.types.InlineKeyboardButton(text=item[0], callback_data=item[0]))
    bot.send_message(message.from_user.id, text=text, reply_markup=keyboard)
    
def loadMenuFromCall (info, message, text):
    keyboard = telebot.types.InlineKeyboardMarkup()
    for item in info:
        keyboard.add(telebot.types.InlineKeyboardButton(text=item[0], callback_data=item[0]))
    bot.send_message(message.chat.id, text=text, reply_markup=keyboard)

@bot.message_handler(commands=["regions"])
def getOurRegion (message):

    keyboard = telebot.types.InlineKeyboardMarkup()

    keyboard.add(telebot.types.InlineKeyboardButton(text="–ê–∑–∏—è", callback_data="asia"))
    keyboard.add(telebot.types.InlineKeyboardButton(text="–ê–º–µ—Ä–∏–∫–∞", callback_data="america"))
    keyboard.add(telebot.types.InlineKeyboardButton(text="–ê—Ñ—Ä–∏–∫–∞", callback_data="africa"))
    keyboard.add(telebot.types.InlineKeyboardButton(text="–û–∫–µ–∞–Ω–∏—è", callback_data="oceania"))
    keyboard.add(telebot.types.InlineKeyboardButton(text="–ï–≤—Ä–æ–ø–∞", callback_data="europa"))

    bot.send_message(message.from_user.id, text = "–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—Ç—å —Å–≤–µ—Ç–∞", reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    bot.delete_message(call.from_user.id, call.message.message_id)

    # ===== Asia =====

    if call.data == "asia":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton(text="–ö–∏—Ç–∞–π", callback_data="china"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–û—Å—Ç–∞–ª—å–Ω–æ–µ", callback_data="asia_rest"))
        bot.send_message(call.message.chat.id, text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup = keyboard)
    if call.data == "china":
        data2 = covid19.getCountries()
        for country in data[0][1][0][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)
    if call.data == "asia_rest":
        data2 = covid19.getCountries()
        for country in data[0][1][1][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)

    # ===== America =====

    if call.data == "america":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton(text="–°–µ–≤–µ—Ä–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞", callback_data="north_america"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–Æ–∂–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞", callback_data="south_america"))
        bot.send_message(call.message.chat.id, text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup = keyboard)
    if call.data == "north_america":
        data2 = covid19.getCountries()
        for country in data[1][1][0][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)  
    if call.data == "south_america":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton(text="–ö–∞—Ä–∏–±—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã", callback_data="caribian"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–û—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã", callback_data="south_america_rest"))
        bot.send_message(call.message.chat.id, text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup = keyboard)  
    if call.data == "caribian":
        data2 = covid19.getCountries()
        for country in data[1][1][1][1][0][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)
    if call.data == "south_america_rest":
        data2 = covid19.getCountries()
        for country in data[1][1][1][1][1][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country) 

    # ===== Africa [beta] =====

    if call.data == "africa":
        data2 = covid19.getCountries()
        for country in data[2][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country) 

    # ===== Oceania =====

    if call.data == "oceania":
        data2 = covid19.getCountries()
        for country in data[3][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)     

    # ===== Europa =====

    if call.data == "europa":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton(text="–ï–≤—Ä–æ—Å–æ—é–∑", callback_data="EU"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–°–ù–ì", callback_data="CIS"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–û—Å—Ç–∞–ª—å–Ω—ã–µ", callback_data="europa_rest"))
        bot.send_message(call.message.chat.id, text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup = keyboard)    

    if call.data == "CIS":
        data2 = covid19.getCountries()
        for country in data[4][1][0][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)

    if call.data == "europa_rest":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton(text="–Æ–≥–æ—Å–ª–∞–≤–∏—è", callback_data="yugoslavia"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–û—Å—Ç–∞–ª—å–Ω—ã–µ", callback_data="europa_rest_rest"))
        bot.send_message(call.message.chat.id, text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup = keyboard) 
    if call.data == "yugoslavia":
        data2 = covid19.getCountries()
        for country in data[4][1][1][1][0][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)
    if call.data == "europa_rest_rest":
        data2 = covid19.getCountries()
        for country in data[4][1][1][1][1][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)

    if call.data == "EU":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton(text="–ß–µ—Ö–æ—Å–ª–æ–≤–∞–∫–∏—è", callback_data="czech"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–ë–µ–Ω–∏–ª—é–∫—Å", callback_data="benilux"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–ü—Ä–∏–±–∞–ª—Ç–∏–∫–∞", callback_data="pribaltica"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–ë–∞–ª–∫–∞–Ω—ã", callback_data="balcans"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–°–∫–∞–Ω–¥–∏–Ω–∞–≤–∏—è", callback_data="scandinavia"))
        keyboard.add(telebot.types.InlineKeyboardButton(text="–û—Å—Ç–∞–ª—å–Ω—ã–µ", callback_data="eu_rest"))
        bot.send_message(call.message.chat.id, text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup = keyboard) 

    if call.data == "czech":
        data2 = covid19.getCountries()
        for country in data[4][1][2][1][0][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)

    if call.data == "benilux":
        data2 = covid19.getCountries()
        for country in data[4][1][2][1][1][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)

    if call.data == "pribaltica":
        data2 = covid19.getCountries()
        for country in data[4][1][2][1][2][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)

    if call.data == "balcans":
        data2 = covid19.getCountries()
        for country in data[4][1][2][1][5][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)


    if call.data == "scandinavia":
        data2 = covid19.getCountries()
        for country in data[4][1][2][1][3][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)

    if call.data == "eu_rest":
        data2 = covid19.getCountries()
        for country in data[4][1][2][1][4][1]:
            data1 = data2[country[1]]
            lib.sendLocationStatsFromCall(call, data2[country[1]], country)

@bot.message_handler(commands=["time"])
def sendStats (message):
    bot.send_message(message.chat.id, message.text.replace("/time ", ""))

bot.polling()
